import 'package:bitcoin/presentation/add_funds_page/add_funds_page.dart';import 'package:bitcoin/presentation/market_page/market_page.dart';import 'package:bitcoin/presentation/card_one_page/card_one_page.dart';import 'package:bitcoin/presentation/wallet_page/wallet_page.dart';import 'package:bitcoin/widgets/app_bar/custom_app_bar.dart';import 'package:bitcoin/widgets/app_bar/appbar_leading_circleimage.dart';import 'package:bitcoin/widgets/app_bar/appbar_trailing_image.dart';import 'package:bitcoin/widgets/custom_drop_down.dart';import 'package:bitcoin/widgets/custom_elevated_button.dart';import 'package:bitcoin/widgets/custom_text_form_field.dart';import 'package:bitcoin/widgets/custom_radio_button.dart';import 'package:bitcoin/widgets/custom_bottom_app_bar.dart';import 'package:bitcoin/widgets/custom_floating_button.dart';import 'package:flutter/material.dart';import 'package:bitcoin/core/app_export.dart';
// ignore_for_file: must_be_immutable
class TradeScreen extends StatelessWidget {TradeScreen({Key? key}) : super(key: key);

List<String> dropdownItemList = ["Item One", "Item Two", "Item Three"];

List<String> dropdownItemList1 = ["Item One", "Item Two", "Item Three"];

List<String> dropdownItemList2 = ["Item One", "Item Two", "Item Three"];

TextEditingController subtractionController = TextEditingController();

String radioGroup = "";

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Container(height: 732.v, width: double.maxFinite, padding: EdgeInsets.symmetric(vertical: 29.v), child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.topCenter, child: Padding(padding: EdgeInsets.only(left: 21.h, right: 24.h), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 2.h), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("BTCLE/USDT", style: theme.textTheme.titleLarge), Text("+10.48 %", style: CustomTextStyles.labelLargeLightblue300)]), CustomImageView(imagePath: ImageConstant.imgDropMenu1, height: 16.adaptSize, width: 16.adaptSize, margin: EdgeInsets.only(left: 12.h, top: 6.v, bottom: 22.v))])), SizedBox(height: 23.v), Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 3.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 2.h), child: Row(children: [CustomDropDown(width: 80.h, hintText: "Cross", items: dropdownItemList), Padding(padding: EdgeInsets.only(left: 12.h), child: CustomDropDown(width: 60.h, hintText: "10 X", items: dropdownItemList1))])), SizedBox(height: 24.v), Container(width: 180.h, margin: EdgeInsets.only(left: 2.h), padding: EdgeInsets.all(8.h), decoration: AppDecoration.fillGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder12), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [_buildOpen(context), Padding(padding: EdgeInsets.only(top: 7.v, right: 24.h, bottom: 7.v), child: Text("Close", style: theme.textTheme.bodySmall))])), SizedBox(height: 24.v), Padding(padding: EdgeInsets.only(left: 2.h), child: CustomDropDown(width: 180.h, icon: Container(margin: EdgeInsets.fromLTRB(30.h, 8.v, 12.h, 8.v), child: CustomImageView(imagePath: ImageConstant.imgDropMenu1, height: 16.adaptSize, width: 16.adaptSize)), hintText: "Limit Order", items: dropdownItemList2, prefix: Container(margin: EdgeInsets.fromLTRB(12.h, 8.v, 30.h, 8.v), child: CustomImageView(imagePath: ImageConstant.imgLimitOrder1, height: 16.adaptSize, width: 16.adaptSize)), prefixConstraints: BoxConstraints(maxHeight: 32.v), contentPadding: EdgeInsets.symmetric(vertical: 7.v))), SizedBox(height: 24.v), _buildSubtraction(context), SizedBox(height: 24.v), Container(width: 180.h, margin: EdgeInsets.only(left: 2.h), padding: EdgeInsets.symmetric(horizontal: 8.h, vertical: 6.v), decoration: AppDecoration.fillGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Row(mainAxisSize: MainAxisSize.min, children: [Text("Quantity", style: CustomTextStyles.bodySmallGray600), Spacer(), Text("BTCLE", style: theme.textTheme.bodySmall), CustomImageView(imagePath: ImageConstant.imgVector, height: 6.v, width: 7.h, margin: EdgeInsets.only(left: 6.h, top: 6.v, bottom: 6.v))])), SizedBox(height: 24.v), SizedBox(width: 182.h, child: Divider(color: appTheme.blueGray900, indent: 2.h)), SizedBox(height: 17.v, width: 182.h, child: Stack(alignment: Alignment.topLeft, children: [Align(alignment: Alignment.bottomCenter, child: Container(width: 180.h, margin: EdgeInsets.only(left: 2.h, top: 4.v), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("00%", style: CustomTextStyles.bodySmallGray60010), Text("25%", style: CustomTextStyles.bodySmallGray60010), Text("50%", style: CustomTextStyles.bodySmallGray60010), Text("75%", style: CustomTextStyles.bodySmallGray60010), Text("100%", style: CustomTextStyles.bodySmallGray60010)]))), CustomImageView(imagePath: ImageConstant.imgVectorBlueGray50, height: 4.v, width: 6.h, alignment: Alignment.topLeft)])), SizedBox(height: 17.v), _buildTPSL(context), SizedBox(height: 12.v), Container(width: 180.h, margin: EdgeInsets.only(left: 2.h), child: Row(children: [Text("Available", style: CustomTextStyles.bodySmallGray600), Spacer(), Text("0.000 USDT", style: CustomTextStyles.bodySmallWhiteA700), CustomImageView(imagePath: ImageConstant.imgAddition, height: 16.adaptSize, width: 16.adaptSize, margin: EdgeInsets.only(left: 4.h))])), SizedBox(height: 6.v), Padding(padding: EdgeInsets.only(left: 2.h), child: _buildFrame(context, maxOpen: "Max Open", bTCLECounter: "0.000 BTCLE")), SizedBox(height: 6.v), _buildBuyUSDT(context), SizedBox(height: 11.v), Padding(padding: EdgeInsets.only(left: 2.h), child: _buildFrame(context, maxOpen: "Max Open", bTCLECounter: "0.000 BTCLE")), SizedBox(height: 6.v), _buildSellUSDT(context)])), Column(children: [Align(alignment: Alignment.centerRight, child: Text("Funding rate / Countdown", style: CustomTextStyles.bodySmallGray600)), Align(alignment: Alignment.centerRight, child: Text("0.0505% / 01:25:24", style: CustomTextStyles.bodyLargeBluegray50)), SizedBox(height: 28.v), _buildFrame(context, maxOpen: "Price\n(USDT)", bTCLECounter: "Quantity\n(BTCLE)"), SizedBox(height: 18.v), _buildFrame(context, maxOpen: "68,284.6", bTCLECounter: "3.049"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,284.2", bTCLECounter: "3.014"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,284.4", bTCLECounter: "3.795"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,284.9", bTCLECounter: "3.017"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,283.1", bTCLECounter: "3.060"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,284.1", bTCLECounter: "3.056"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,284.4", bTCLECounter: "0.069"), SizedBox(height: 24.v), Align(alignment: Alignment.centerLeft, child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("98,271.9", style: CustomTextStyles.bodyLargeLightblue300), Text("68,292.9", style: CustomTextStyles.bodySmallGray600)]), CustomImageView(imagePath: ImageConstant.imgPajamasArrowRight, height: 12.adaptSize, width: 12.adaptSize, margin: EdgeInsets.only(left: 4.h, top: 4.v, bottom: 19.v))])), SizedBox(height: 13.v), _buildFrame(context, maxOpen: "68,284.6", bTCLECounter: "17.919"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,284.2", bTCLECounter: "3.052"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,284.4", bTCLECounter: "3.049"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,284.9", bTCLECounter: "3.047"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,283.1", bTCLECounter: "3.025"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,284.1", bTCLECounter: "3.266"), SizedBox(height: 12.v), _buildFrame(context, maxOpen: "68,284.4", bTCLECounter: "3.021")])])]))), CustomImageView(imagePath: ImageConstant.imgBackgroundLight, height: 461.v, width: 428.h, alignment: Alignment.bottomCenter, margin: EdgeInsets.only(bottom: 28.v)), Align(alignment: Alignment.center, child: Container(margin: EdgeInsets.symmetric(horizontal: 64.h), decoration: AppDecoration.fillBlack, child: Text("COMING SOON", style: CustomTextStyles.displayMediumChiqPro)))])), bottomNavigationBar: _buildFrame18(context), floatingActionButton: CustomFloatingButton(height: 82, width: 52, child: CustomImageView(imagePath: ImageConstant.imgFrame73BlueGray50, height: 41.0.v, width: 26.0.h)), floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked)); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 92.v, leadingWidth: 60.h, leading: AppbarLeadingCircleimage(imagePath: ImageConstant.imgFrame77, margin: EdgeInsets.only(left: 24.h, top: 40.v, bottom: 16.v), onTap: () {onTapCircleImage(context);}), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgFrame41516, margin: EdgeInsets.fromLTRB(24.h, 40.v, 24.h, 16.v))], styleType: Style.bgFill); } 
/// Section Widget
Widget _buildOpen(BuildContext context) { return CustomElevatedButton(height: 32.v, width: 80.h, text: "Open", buttonStyle: CustomButtonStyles.fillBlueGray, buttonTextStyle: theme.textTheme.labelLarge!); } 
/// Section Widget
Widget _buildSubtraction(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 2.h), child: CustomTextFormField(width: 180.h, controller: subtractionController, hintText: "68304.3", hintStyle: theme.textTheme.bodySmall!, textInputAction: TextInputAction.done, suffix: Container(margin: EdgeInsets.symmetric(horizontal: 30.h, vertical: 6.v), child: CustomImageView(imagePath: ImageConstant.imgSubtraction, height: 20.adaptSize, width: 20.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 32.v), contentPadding: EdgeInsets.only(left: 8.h, top: 7.v, bottom: 7.v), borderDecoration: TextFormFieldStyleHelper.fillGrayTL8, filled: true, fillColor: appTheme.gray90001)); } 
/// Section Widget
Widget _buildTPSL(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 2.h), child: CustomRadioButton(text: "TP/SL", value: "TP/SL", groupValue: radioGroup, onChange: (value) {radioGroup = value;})); } 
/// Section Widget
Widget _buildBuyUSDT(BuildContext context) { return CustomElevatedButton(height: 28.v, width: 180.h, text: "Buy USDT", margin: EdgeInsets.only(left: 2.h), buttonStyle: CustomButtonStyles.none, decoration: CustomButtonStyles.gradientPrimaryToBlueGrayDecoration, buttonTextStyle: theme.textTheme.bodySmall!); } 
/// Section Widget
Widget _buildSellUSDT(BuildContext context) { return CustomElevatedButton(height: 28.v, width: 180.h, text: "Sell USDT", margin: EdgeInsets.only(left: 2.h), buttonStyle: CustomButtonStyles.none, decoration: CustomButtonStyles.gradientPrimaryToBlueGrayDecoration, buttonTextStyle: theme.textTheme.bodySmall!); } 
/// Section Widget
Widget _buildFrame18(BuildContext context) { return CustomBottomAppBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
/// Common widget
Widget _buildFrame(BuildContext context, {required String maxOpen, required String bTCLECounter, }) { return SizedBox(width: 180.h, child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 1.v), child: Text(maxOpen, style: CustomTextStyles.bodySmallGray600.copyWith(color: appTheme.gray600))), Text(bTCLECounter, style: CustomTextStyles.bodySmallWhiteA700.copyWith(color: appTheme.whiteA700))])); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.addFundsPage; case BottomBarEnum.Market: return AppRoutes.marketPage; case BottomBarEnum.Card: return AppRoutes.cardOnePage; case BottomBarEnum.Wallet: return AppRoutes.walletPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.addFundsPage: return AddFundsPage(); case AppRoutes.marketPage: return MarketPage(); case AppRoutes.cardOnePage: return CardOnePage(); case AppRoutes.walletPage: return WalletPage(); default: return DefaultWidget();} } 
/// Navigates to the profileScreen when the action is triggered.
onTapCircleImage(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileScreen); } 
 }
